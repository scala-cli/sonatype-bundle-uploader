name: Launchers
on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/cache-action@v6.3
      - uses: coursier/setup-action@v1.2.1
        with:
          jvm: zulu:17
      - run: ./mill __.compile
  publish:
    needs: compile
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/cache-action@v6.3
      - uses: coursier/setup-action@v1.2.1
        with:
          jvm: zulu:17
      - run: .github/scripts/gpg-setup.sh
        shell: bash
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
      - name: Release
        run: ./mill -i publishSonatype __.publishArtifacts
        env:
          PGP_PASSWORD: ${{ secrets.PGP_PASSPHRASE }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  generate-launchers:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/cache-action@v6.3
      - uses: coursier/setup-action@v1.2.1
        with:
          jvm: zulu:17
      - run: |
          ./mill -i "uploader.writeNativeImageScript" generate.sh "" && \
          ./generate.sh && \
          ./mill -i "uploader.copyToArtifacts" artifacts/
        if: runner.os != 'Windows'
      - run: .github/scripts/generate-native-image-windows.sh
        shell: bash
        if: runner.os == 'Windows'
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: launcher-${{ matrix.os }}
          path: artifacts/
          if-no-files-found: error
          retention-days: 1
      - run: ./mill -i upload artifacts/
        if: github.event_name == 'push'
        env:
          UPLOAD_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate-static-launcher:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/cache-action@v6.3
      - uses: coursier/setup-action@v1.2.1
        with:
          jvm: zulu:17
      - run: |
          ./mill -i "uploader-static.writeNativeImageScript" generate.sh "" && \
          ./generate.sh && \
          ./mill -i "uploader-static.copyToArtifacts" artifacts/
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: launcher-${{ matrix.os }}-static
          path: artifacts/
          if-no-files-found: error
          retention-days: 1
      - run: ./mill -i upload artifacts/
        if: github.event_name == 'push'
        env:
          UPLOAD_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate-mostly-static-launcher:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/cache-action@v6.3
      - uses: coursier/setup-action@v1.2.1
        with:
          jvm: zulu:17
      - run: |
          ./mill -i "uploader-mostly-static.writeNativeImageScript" generate.sh "" && \
          ./generate.sh && \
          ./mill -i "uploader-mostly-static.copyToArtifacts" artifacts/
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: launcher-${{ matrix.os }}-mostly-static
          path: artifacts/
          if-no-files-found: error
          retention-days: 1
      - run: ./mill -i upload artifacts/
        if: github.event_name == 'push'
        env:
          UPLOAD_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
